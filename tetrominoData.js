// Alphabetical order: i,j,l,o,s,t,z
let tetrominoCoordinates = [
  // i
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 3,
      y: 1
    }],
    [{
      x: 2,
      y: 0
    }, {
      x: 2,
      y: 1
    }, {
      x: 2,
      y: 2
    }, {
      x: 2,
      y: 3
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }, {
      x: 3,
      y: 2
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 1,
      y: 3
    }]
  ],
  // j
  [
    [{
      x: 0,
      y: 0
    }, {
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 2,
      y: 0
    }, {
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 0,
      y: 2
    }]
  ],
  // l
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 2,
      y: 0
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 0,
      y: 0
    }, {
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }]
  ],
  // o
  [
    [{
      x: 0,
      y: 0
    }, {
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 0,
      y: 1
    }],
  ],
  // s
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 0
    }, {
      x: 2,
      y: 0
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 2
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 0,
      y: 0
    }, {
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }]
  ],
  // t
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 0
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 0,
      y: 1
    }]
  ],
  // z
  [
    [{
      x: 0,
      y: 0
    }, {
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 2,
      y: 0
    }, {
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 1,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 0,
      y: 1
    }, {
      x: 0,
      y: 2
    }]
  ]
]

let tetrominoShadows = [
  // i
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 3,
      y: 1
    }],
    [{
      x: 2,
      y: 3
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }, {
      x: 3,
      y: 2
    }],
    [{
      x: 1,
      y: 3
    }]
  ],
  // j
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 2,
      y: 0
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 2
    }]
  ],
  // l
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 0,
      y: 0
    }, {
      x: 1,
      y: 2
    }],
  ],
  // o
  [
    [{
      x: 1,
      y: 1
    }, {
      x: 0,
      y: 1
    }],
  ],
  // s
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 0
    }],
    [{
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 0,
      y: 2
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 2
    }]
  ],
  // t
  [
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 1,
      y: 2
    }, {
      x: 0,
      y: 1
    }]
  ],
  // z
  [
    [{
      x: 0,
      y: 0
    }, {
      x: 1,
      y: 1
    }, {
      x: 2,
      y: 1
    }],
    [{
      x: 2,
      y: 1
    }, {
      x: 1,
      y: 2
    }],
    [{
      x: 0,
      y: 1
    }, {
      x: 1,
      y: 2
    }, {
      x: 2,
      y: 2
    }],
    [{
      x: 1,
      y: 1
    }, {
      x: 0,
      y: 2
    }]
  ]
]

function getPossiblePlacements(type) {
  switch (type) {
    case 0:
      return [
        [1, 6],
        [-1, 7]
      ]
      break;
    case 1:
      return [
        [1, 7],
        [0, 7],
        [1, 7],
        [1, 8]
      ]
      break;
    case 2:
      return [
        [1, 7],
        [0, 7],
        [1, 7],
        [1, 8]
      ]
      break;
    case 3:
      return [
        [1, 8]
      ]
      break;
    case 4:
      return [
        [1, 7],
        [0, 7]
      ]
      break;
    case 5:
      return [
        [1, 7],
        [0, 7],
        [1, 7],
        [1, 8]
      ]
      break;
    case 6:
      return [
        [1, 7],
        [0, 7]
      ]
      break;
  }
}